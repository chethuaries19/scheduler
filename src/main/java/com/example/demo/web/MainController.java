package com.example.demo.web;

import com.example.demo.model.Product;
import com.example.demo.persistence.UserRepository;
import com.example.demo.service.CsvExportService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;

@Controller // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class MainController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private UserRepository userRepository;
    private final CsvExportService csvExportService;

    public MainController(CsvExportService csvExportService) {
        this.csvExportService = csvExportService;
    }


    /*@PostMapping(path="/app") // Map ONLY POST Requests
    public @ResponseBody String addNewUser (@RequestParam Integer id
            , @RequestParam String timeStamp) throws ParseException {
        // @ResponseBody means the returned String is the response
        // @RequestParam means it is a parameter from the GET or POST request

        Product n = new Product();
        n.setId(id);
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-mm-dd HH:mm:ss");

        n.setProductTime(formatter.parse(timeStamp));
        userRepository.save(n);//push to db
         return "Saved";
    }*/

    @RequestMapping(path = "/product")
    public void getAllEmployeesInCsv(HttpServletResponse servletResponse) throws IOException {
        servletResponse.setContentType("text/csv");
        String name="employee_"+System.currentTimeMillis();
        servletResponse.addHeader("Content-Disposition","attachment; filename="+name+".csv");
        csvExportService.writeEmployeesToCsv(servletResponse.getWriter());
    }
}
